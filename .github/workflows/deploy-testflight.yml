name: Build and Deploy to TestFlight

on:
  push:
    branches:
      - main
  pull_request:

env:
  IPHONEOS_DEPLOYMENT_TARGET: ${{ vars.IPHONEOS_DEPLOYMENT_TARGET }}
  TEAM_ID:                    ${{ secrets.TEAM_ID }}

jobs:
  validate:
    if: github.event_name == 'pull_request'
    runs-on: macos-latest
    name: PR Validation (no signing)
    steps:
      - uses: actions/checkout@v4

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 'latest-stable'

      - name: Build (skip code signing)
        run: |
          xcodebuild \
            -project HueKnew.xcodeproj \
            -scheme HueKnew \
            -configuration Release \
            -derivedDataPath build \
            clean build \
            IPHONEOS_DEPLOYMENT_TARGET="$IPHONEOS_DEPLOYMENT_TARGET" \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO

  build_and_deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: macos-latest
    name: Archive & Deploy (manual signing)
    steps:
      - uses: actions/checkout@v4

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 'latest-stable'

      - name: Install certificates
        run: |
          # 1) create & unlock a keychain
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain

          # 2) import Apple Development cert
          echo "${{ secrets.DEV_CERT_P12_BASE64 }}" | base64 --decode > dev.p12
          security import dev.p12 \
            -k build.keychain \
            -P "${{ secrets.DEV_CERT_P12_PASSWORD }}" \
            -T /usr/bin/codesign

          # 3) import Apple Distribution cert
          echo "${{ secrets.DIST_CERT_P12_BASE64 }}" | base64 --decode > dist.p12
          security import dist.p12 \
            -k build.keychain \
            -P "${{ secrets.DIST_CERT_P12_PASSWORD }}" \
            -T /usr/bin/codesign

      - name: Install provisioning profile
        run: |
          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          echo "${{ secrets.PROV_PROFILE_BASE64 }}" | base64 --decode \
            > "$HOME/Library/MobileDevice/Provisioning Profiles/${{ secrets.PROFILE_UUID }}.mobileprovision"

      - name: Archive iOS App (manual signing)
        run: |
          xcodebuild \
            -project HueKnew.xcodeproj \
            -scheme HueKnew \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath build/HueKnew.xcarchive \
            IPHONEOS_DEPLOYMENT_TARGET="$IPHONEOS_DEPLOYMENT_TARGET" \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            PROVISIONING_PROFILE="${{ secrets.PROFILE_UUID }}" \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            archive

      - name: Create exportOptions.plist
        run: |
          cat > exportOptions.plist <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
           "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>teamID</key><string>$TEAM_ID</string>
            <key>signingStyle</key><string>manual</string>
          </dict>
          </plist>
          EOF

      - name: Export .ipa
        run: |
          xcodebuild -exportArchive \
            -archivePath build/HueKnew.xcarchive \
            -exportOptionsPlist exportOptions.plist \
            -exportPath build/export

      - name: Upload to TestFlight
        uses: apple-actions/upload-testflight-build@v3
        with:
          app-path: 'build/export/HueKnew.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
